{"version":3,"sources":["redux/dialogsReducer.js","components/Users/users.module.css","API/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/HOC/withSuspense.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Utils/object-helpers.js","redux/usersReducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","redux/appReducer.js","redux/friendsReducer.js","redux/redux-store.js","App.js","index.js","components/Common/FormsControls/FormsControls.js","assets/images/preloader.svg","components/Common/Preloader/preloader.jsx","components/Common/FormsControls/FormsControl.module.css","components/Header/Header.module.css","components/Common/Paginator/Paginator.module.css","components/Utils/Validators/validator.js","redux/profileReducer.js"],"names":["sendMessage","initialState","dialogsData","id","name","img","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","post","unFollow","delete","authAPI","me","login","email","password","rememberMe","logout","profileAPI","setUserProfile","getStatus","updateStatus","status","put","Boolean","window","location","hostname","match","Header","props","className","classes","header","src","alt","login__block","isAuth","onClick","to","SET_USER_DATA","userId","setAuthUserData","payload","setUsersThunk","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","connect","auth","WithSuspense","Suspense","fallback","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","form__summary_error","messages","length","stopSubmit","_error","formData","Music","Navbar","nav","activeClassName","active","item","News","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowingProgress","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetchingAC","toggleIsFollowingProgressAC","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","e","cn","selectedPage","pageNumber","User","user","photos","small","user__photo","disabled","some","Users","getAllUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","toggleFollowInProgress","compose","bind","totalCount","setInitialized","initialized","appReducer","friends","friendsReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","friendsList","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","AppContainer","withRouter","promise","getAuthUserData","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormsControl","input","meta","touched","children","hasError","form__control","Textarea","restProps","child","placeholder","validatators","text","validate","Preloader","preloader","value","maxLengthCreator","maxLength","addPost","setStatus","postsData","likeCount","newPostText","profile","addPostActionCreator","newPostBody","setStatusAC","setUserThunk","getStatusThunk","updateStatusThunk","newPost"],"mappings":"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","file":"static/js/main.04425492.chunk.js","sourcesContent":["const sendMessage = \"samurai-network/dialogs/SEND-MESSAGE\";\r\nlet initialState = {\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      name: \"Dima\",\r\n      img: \"https://99px.ru/sstorage/1/2009/12/image_10612090726499603257.gif\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Mom\",\r\n      img: \"https://99px.ru/sstorage/1/2009/12/image_10112091349147281492.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Dad\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1210509134410.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Lena\",\r\n      img: \"https://99px.ru/sstorage/1/2009/06/1010609174346.gif\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Andrew\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1200509145156.gif\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Mike\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1160509141516.jpg\",\r\n    },\r\n  ],\r\n  messagesData: [\r\n    { id: 1, message: \"Hello\" },\r\n    { id: 2, message: \"H r U?\" },\r\n    { id: 3, message: \"Nice code\" },\r\n    { id: 4, message: \"I'm fine\" },\r\n    { id: 5, message: \"Have a nice day!\" },\r\n    { id: 6, message: \"God bless u\" },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case sendMessage:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, { id: 6, message: body }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: sendMessage,\r\n  newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__photo\":\"users_user__photo__1J3_t\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\r\n  headers: {\r\n    \"API-KEY\": \"f84e5cfa-8051-44bf-96f8-cf869b556a7a\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n\r\n  follow(id) {\r\n    return instance.post(`follow/${id}`).then((response) => response.data);\r\n  },\r\n  unFollow(id) {\r\n    return instance.delete(`follow/${id}`).then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`/auth/me`).then((response) => response.data);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance\r\n      .post(`/auth/login`, { email, password, rememberMe })\r\n      .then((response) => response.data);\r\n  },\r\n  logout() {\r\n    return instance.delete(`/auth/login`).then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  setUserProfile(id) {\r\n    return instance.get(`profile/${id}`).then((response) => response.data);\r\n  },\r\n  getStatus(id) {\r\n    return instance\r\n      .get(`profile/status/${id}`)\r\n      .then((response) => response.data);\r\n  },\r\n  updateStatus(status) {\r\n    return instance\r\n      .put(\"profile/status/\", { status })\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1SdwX\",\"item\":\"Navbar_item__2Olvx\",\"active\":\"Navbar_active__3gm87\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div>\r\n        <img\r\n          className={classes.img}\r\n          src=\"https://www.clubsportive.nl/wp-content/uploads/2018/12/logo-example-300x150.jpg\"\r\n          alt=\"logo\"\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.login__block}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {\" \"}\r\n            {props.login} - <button onClick={props.logout}>Выйти</button>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../API/api\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const setUsersThunk = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.resultCode === 0) {\r\n    let { id, email, login } = response.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const loginThunk = (email, password, rememberMe) => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.resultCode === 0) {\r\n      dispatch(setUsersThunk());\r\n    } else {\r\n      let message =\r\n        response.messages.length > 0 ? response.messages[0] : \"Some Error\";\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  };\r\n};\r\nexport const logoutThunk = () => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutThunk as logout } from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport Preloader from \"../Common/Preloader/preloader\";\r\n\r\nexport const WithSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </React.Suspense>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input } from \"../Common/FormsControls/FormsControls\";\r\nimport { required } from \"../Utils/Validators/validator\";\r\nimport classes from \"../Common/FormsControls/FormsControl.module.css\";\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField(\"Email\", \"email\", [required], Input)}\r\n      {createField(\"password\", \"password\", [required], Input, {\r\n        type: \"password\",\r\n      })}\r\n      {createField(\r\n        null,\r\n        \"rememberMe\",\r\n        [],\r\n        Input,\r\n        {\r\n          type: \"checkbox\",\r\n        },\r\n        \"remember me\"\r\n      )}\r\n\r\n      {error && <div className={classes.form__summary_error}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nexport default LoginReduxForm;\r\n","import React from \"react\"; // import classes from \"./Login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginReduxform from \"./LoginForm\";\r\nimport { loginThunk as login } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxform onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\nconst Music = (props) => {\r\n  return <div>Music</div>;\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/profile\"\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/dialogs\"\r\n          >\r\n            Messages\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/users\"\r\n          >\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/news\"\r\n          >\r\n            News\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/music\"\r\n          >\r\n            Music\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/settings\"\r\n          >\r\n            Settings\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\nconst News = (props) => {\r\n  return <div>News</div>;\r\n};\r\nexport default News;\r\n","import React from \"react\";\r\nimport classes from \"./Settings.module.css\";\r\nconst Settings = (props) => {\r\n  return <div>Settings</div>;\r\n};\r\nexport default Settings;\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"../API/api\";\r\nimport { updateObjectInArray } from \"../components/Utils/object-helpers\";\r\nconst follow = \"samurai-network/app/FOLLOW\";\r\nconst unfollow = \"samurai-network/users/UNFOLLOW\";\r\nconst setUsers = \"samurai-network/users/SET_USERS\";\r\nconst setCurrentPage = \"samurai-network/users/SET_CURRENT_PAGE\";\r\nconst setTotalUsersCount = \"samurai-network/users/SET_TOTAL_USERS_COUNT\";\r\nconst toggleIsFetching = \"samurai-network/users/TOGGLE_IS_FETCHING\";\r\nconst toggleIsFollowingProgress =\r\n  \"samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case follow:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case unfollow:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n    case setUsers:\r\n      return { ...state, users: action.users };\r\n    case setCurrentPage:\r\n      return { ...state, currentPage: action.currentPage };\r\n    case setTotalUsersCount:\r\n      return { ...state, totalUsersCount: action.count };\r\n    case toggleIsFetching:\r\n      return { ...state, isFetching: action.isFetching };\r\n    case toggleIsFollowingProgress:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst followSuccess = (userId) => ({ type: follow, userId });\r\nconst unfollowSuccess = (userId) => ({ type: unfollow, userId });\r\nconst setUsersAC = (users) => ({ type: setUsers, users });\r\nexport const setCurrentPageAC = (currentPage) => ({\r\n  type: setCurrentPage,\r\n  currentPage,\r\n});\r\nconst setTotalUsersCountAC = (count) => ({\r\n  type: setTotalUsersCount,\r\n  count,\r\n});\r\nconst toggleIsFetchingAC = (isFetching) => ({\r\n  type: toggleIsFetching,\r\n  isFetching,\r\n});\r\nexport const toggleIsFollowingProgressAC = (isFetching, userId) => ({\r\n  type: toggleIsFollowingProgress,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetchingAC(false));\r\n    dispatch(setUsersAC(response.items));\r\n    dispatch(setTotalUsersCountAC(response.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n  dispatch(toggleIsFollowingProgressAC(true, id));\r\n  let response = await apiMethod(id);\r\n  if (response.resultCode === 0) {\r\n    dispatch(actionCreator(id));\r\n  }\r\n  dispatch(toggleIsFollowingProgressAC(false, id));\r\n};\r\n\r\nexport const followThunk = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      usersAPI.follow.bind(usersAPI),\r\n      followSuccess\r\n    );\r\n  };\r\n};\r\nexport const unFollowThunk = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      usersAPI.unFollow.bind(usersAPI),\r\n      unfollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p,\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./users.module.css\";\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={\"/profile/\" + user.id}>\r\n            <img\r\n              src={\r\n                user.photos.small != null\r\n                  ? user.photos.small\r\n                  : \"https://vk.com/images/camera_400.png?ava=1\"\r\n              }\r\n              alt=\"фото пользователя\"\r\n              className={styles.user__photo}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                unfollow(user.id);\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                follow(user.id);\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <div>{user.name}</div>\r\n        <div>{user.status}</div>\r\n      </span>\r\n      <span>\r\n        <div>{\"Страна\"}</div>\r\n        <div>{\"Город\"}</div>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  users,\r\n  followingInProgress,\r\n  unfollow,\r\n  follow,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      <div>\r\n        {users.map((u) => (\r\n          <User\r\n            user={u}\r\n            followingInProgress={followingInProgress}\r\n            unfollow={unfollow}\r\n            follow={follow}\r\n            key={u.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export const getAllUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  followThunk as follow,\r\n  setCurrentPageAC as setCurrentPage,\r\n  unFollowThunk as unfollow,\r\n  toggleIsFollowingProgressAC as toggleFollowInProgress,\r\n  getUsers,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getPageSize,\r\n  getAllUsers,\r\n  getTotalUsersCount,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getCurrentPage,\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    let { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n  onPageChanged = (pageNumber) => {\r\n    let { pageSize } = this.props;\r\n\r\n    this.props.getUsers(pageNumber, pageSize);\r\n    this.props.setCurrentPage(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          onPageChanged={this.onPageChanged}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          toggleFollowInProgress={this.props.toggleFollowInProgress}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getAllUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowInProgress,\r\n    getUsers,\r\n  })\r\n)(UsersContainer);\r\n","import { setUsersThunk as  getAuthUserData} from \"./authReducer\";\r\n\r\nconst setInitialized = \"samurai-network/app/SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case setInitialized:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: setInitialized,\r\n});\r\n\r\nexport const initializeAppThunk = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {\r\n  friends: [\r\n    {\r\n      id: 4,\r\n      name: \"Lena\",\r\n      img: \"https://99px.ru/sstorage/1/2009/06/1010609174346.gif\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Andrew\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1200509145156.gif\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Mike\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1160509141516.jpg\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default friendsReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  friendsList: friendsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport \"./App.css\";\nimport Preloader from \"./components/Common/Preloader/preloader\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport { WithSuspense } from \"./components/HOC/withSuspense\";\nimport LoginPage from \"./components/Login/Login\";\nimport Music from \"./components/Music/Music\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport { initializeAppThunk as initializeApp } from \"./redux/appReducer\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./components/Profile/ProfileContainer\")\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        {/* <FriendList /> */}\n        <div className=\"app-wrapper__content\">\n          <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)} />\n          <Route\n            path=\"/profile/:userId?\"\n            render={WithSuspense(ProfileContainer)}\n          />\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <LoginPage />} />\n\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/music\" component={Music} />\n          <Route path=\"/settings\" component={Settings} />\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\nconst AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJSApp = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </BrowserRouter>\n  );\n};\nexport default SamuraiJSApp;\n","import * as serviceWorker from \"./serviceWorker\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./FormsControl.module.css\";\r\n\r\nconst FormsControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.form__control + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      <div>{hasError && <span>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormsControl {...props}>\r\n      <textarea {...input} {...restProps}></textarea>\r\n    </FormsControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n\r\n  return (\r\n    <FormsControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormsControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validatators,\r\n  component,\r\n  props = {},\r\n  text\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name={name}\r\n        placeholder={placeholder}\r\n        component={component}\r\n        validate={validatators}\r\n        {...props}\r\n      />\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/preloader.c2f67646.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} />{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__control\":\"FormsControl_form__control__2WcUZ\",\"error\":\"FormsControl_error__2DMvp\",\"form__summary_error\":\"FormsControl_form__summary_error__1r_HO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__AiFft\",\"img\":\"Header_img__3hSUL\",\"login__block\":\"Header_login__block__aHZwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2LXvF\",\"pageNumber\":\"Paginator_pageNumber__1IIMP\",\"selectedPage\":\"Paginator_selectedPage__3y9iD\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return \"max length is 30\";\r\n  return undefined;\r\n};\r\n","import { profileAPI } from \"../API/api\";\r\n\r\nconst addPost = \"samurai-network/profile/ADD-POST\";\r\nconst setUserProfile = \"samurai-network/profile/SET-USER-PROFILE\";\r\nconst setStatus = \"samurai-network/profile/SET-STATUS\";\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"Hi! How r u?\", likeCount: 15 },\r\n    { id: 2, message: \"Hi! It's my first post\", likeCount: 20 },\r\n  ],\r\n  newPostText: \"it-cam\",\r\n  profile: null,\r\n  status: \"----\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case addPost:\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostBody,\r\n        likeCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n        newPostText: \"\",\r\n      };\r\n\r\n    case setUserProfile:\r\n      return { ...state, profile: action.profile };\r\n    case setStatus:\r\n      return { ...state, status: action.status };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({\r\n  type: addPost,\r\n  newPostBody,\r\n});\r\nexport const setUserProfileAC = (profile) => ({\r\n  type: setUserProfile,\r\n  profile,\r\n});\r\nexport const setStatusAC = (status) => ({\r\n  type: setStatus,\r\n  status,\r\n});\r\n\r\nexport const setUserThunk = (id) => {\r\n  return async (dispatch) => {\r\n    let response = await profileAPI.setUserProfile(id);\r\n    dispatch(setUserProfileAC(response));\r\n  };\r\n};\r\nexport const getStatusThunk = (id) => {\r\n  return async (dispatch) => {\r\n    let response = await profileAPI.getStatus(id);\r\n    dispatch(setStatusAC(response));\r\n  };\r\n};\r\n\r\nexport const updateStatusThunk = (status) => {\r\n  return async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.resultCode === 0) {\r\n      dispatch(setStatusAC(status));\r\n    }\r\n  };\r\n};\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}
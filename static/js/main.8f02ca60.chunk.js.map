{"version":3,"sources":["API/api.js","redux/dialogsReducer.js","components/Users/users.module.css","components/Navbar/Navbar.module.css","components/Common/FormsControls/FormsControls.js","serviceWorker.js","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/HOC/withSuspense.js","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Music/Music.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Utils/object-helpers.js","redux/usersReducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","redux/appReducer.js","redux/friendsReducer.js","redux/redux-store.js","App.js","index.js","assets/images/preloader.svg","components/Common/Preloader/preloader.jsx","components/Common/FormsControls/FormsControl.module.css","components/Utils/Validators/validator.js","components/Header/Header.module.css","components/Common/Paginator/Paginator.module.css","redux/profileReducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","id","post","unFollow","delete","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","profileAPI","setUserProfile","getStatus","updateStatus","status","put","savePhoto","profilePhoto","formData","FormData","append","saveProfile","profile","sendMessage","initialState","dialogsData","name","img","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","FormsControl","input","meta","touched","error","children","hasError","className","classes","form__control","Textarea","props","restProps","child","Input","createField","placeholder","validatators","component","text","validate","Boolean","window","location","hostname","match","Header","header","src","alt","login__block","isAuth","onClick","to","SET_USER_DATA","getCaptchaUrlSucces","userId","captchaUrl","setAuthUserData","payload","setUsersThunk","dispatch","a","resultCode","getCaptchaUrlThunk","url","authReducer","HeaderContainer","this","React","Component","connect","auth","WithSuspense","Suspense","fallback","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","form__summary_error","messages","length","stopSubmit","_error","Music","Navbar","nav","activeClassName","active","item","News","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowingProgress","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetchingAC","toggleIsFollowingProgressAC","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","e","cn","selectedPage","pageNumber","User","user","photos","small","user__photo","disabled","some","Users","getAllUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","toggleFollowInProgress","compose","bind","totalCount","setInitialized","initialized","globalError","appReducer","friends","friendsReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","friendsList","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","console","initializeApp","addEventListener","removeEventListener","exact","from","path","render","AppContainer","withRouter","promise","getAuthUserData","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","Preloader","preloader","value","maxLengthCreator","maxLength","addPost","setStatus","savePhotoSucces","postsData","likeCount","newPostText","addPostActionCreator","newPostBody","setStatusAC","setUserThunk","getStatusThunk","updateStatusThunk","savePhotoThunk","file","saveProfileThunk","getState","reject","newPost"],"mappings":"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","file":"static/js/main.8f02ca60.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n\r\n  headers: {\r\n    \"API-KEY\": \"f84e5cfa-8051-44bf-96f8-cf869b556a7a\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => response.data);\r\n  },\r\n\r\n  follow(id) {\r\n    return instance.post(`follow/${id}`).then((response) => response.data);\r\n  },\r\n  unFollow(id) {\r\n    return instance.delete(`follow/${id}`).then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`/auth/me`).then((response) => response.data);\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance\r\n      .post(`/auth/login`, { email, password, rememberMe, captcha })\r\n      .then((response) => response.data);\r\n  },\r\n  logout() {\r\n    return instance.delete(`/auth/login`).then((response) => response.data);\r\n  },\r\n};\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance\r\n      .get(`security/get-captcha-url`)\r\n      .then((response) => response.data);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  setUserProfile(id) {\r\n    return instance.get(`profile/${id}`).then((response) => response.data);\r\n  },\r\n  getStatus(id) {\r\n    return instance\r\n      .get(`profile/status/${id}`)\r\n      .then((response) => response.data);\r\n  },\r\n  updateStatus(status) {\r\n    return instance\r\n      .put(\"profile/status/\", { status })\r\n      .then((response) => response.data);\r\n  },\r\n  savePhoto(profilePhoto) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", profilePhoto);\r\n\r\n    return instance\r\n      .put(\"profile/photo/\", formData, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n      .then((response) => response.data);\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(\"profile\", profile).then((response) => response.data);\r\n  },\r\n};\r\n","const sendMessage = \"samurai-network/dialogs/SEND-MESSAGE\";\r\nlet initialState = {\r\n  dialogsData: [\r\n    {\r\n      id: 1,\r\n      name: \"Dima\",\r\n      img: \"https://99px.ru/sstorage/1/2009/12/image_10612090726499603257.gif\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Mom\",\r\n      img: \"https://99px.ru/sstorage/1/2009/12/image_10112091349147281492.jpg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Dad\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1210509134410.jpg\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Lena\",\r\n      img: \"https://99px.ru/sstorage/1/2009/06/1010609174346.gif\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Andrew\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1200509145156.gif\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Mike\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1160509141516.jpg\",\r\n    },\r\n  ],\r\n  messagesData: [\r\n    { id: 1, message: \"Hello\" },\r\n    { id: 2, message: \"H r U?\" },\r\n    { id: 3, message: \"Nice code\" },\r\n    { id: 4, message: \"I'm fine\" },\r\n    { id: 5, message: \"Have a nice day!\" },\r\n    { id: 6, message: \"God bless u\" },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case sendMessage:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, { id: 6, message: body }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: sendMessage,\r\n  newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__photo\":\"users_user__photo__1J3_t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1SdwX\",\"item\":\"Navbar_item__2Olvx\",\"active\":\"Navbar_active__3gm87\"};","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport classes from \"./FormsControl.module.css\";\r\n\r\nconst FormsControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div\r\n      className={classes.form__control + \" \" + (hasError ? classes.error : \"\")}\r\n    >\r\n      <div>{children}</div>\r\n      <div>{hasError && <span>{error}</span>}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormsControl {...props}>\r\n      <textarea {...input} {...restProps}></textarea>\r\n    </FormsControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n\r\n  return (\r\n    <FormsControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormsControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validatators,\r\n  component,\r\n  props = {},\r\n  text\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name={name}\r\n        placeholder={placeholder}\r\n        component={component}\r\n        validate={validatators}\r\n        {...props}\r\n      />\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Header.module.css\";\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div>\r\n        <img\r\n          className={classes.img}\r\n          src=\"https://www.clubsportive.nl/wp-content/uploads/2018/12/logo-example-300x150.jpg\"\r\n          alt=\"logo\"\r\n        />\r\n      </div>\r\n\r\n      <div className={classes.login__block}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {\" \"}\r\n            {props.login} - <button onClick={props.logout}>Выйти</button>{\" \"}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={\"/login\"}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../API/api\";\r\n\r\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\r\nconst getCaptchaUrlSucces = \"samurai-network/auth/GET_CAPTCHA_URL_SUCCES\";\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case getCaptchaUrlSucces:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\nexport const getCaptchaUrlSuccesAC = (captchaUrl) => ({\r\n  type: getCaptchaUrlSucces,\r\n  payload: { captchaUrl },\r\n});\r\n\r\nexport const setUsersThunk = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.resultCode === 0) {\r\n    let { id, email, login } = response.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const loginThunk = (email, password, rememberMe, captcha) => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.resultCode === 0) {\r\n      dispatch(setUsersThunk());\r\n    } else {\r\n      if (response.resultCode === 10) {\r\n        dispatch(getCaptchaUrlThunk());\r\n      }\r\n      let message =\r\n        response.messages.length > 0 ? response.messages[0] : \"Some Error\";\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  };\r\n};\r\nexport const logoutThunk = () => {\r\n  return async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n      dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n  };\r\n};\r\nexport const getCaptchaUrlThunk = () => {\r\n  return async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    const captcha = response.url;\r\n    dispatch(getCaptchaUrlSuccesAC(captcha));\r\n  };\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutThunk as logout } from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from \"react\";\r\nimport Preloader from \"../Common/Preloader/preloader\";\r\n\r\nexport const WithSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </React.Suspense>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { createField, Input } from \"../Common/FormsControls/FormsControls\";\r\nimport { required } from \"../Utils/Validators/validator\";\r\nimport classes from \"../Common/FormsControls/FormsControl.module.css\";\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField(\"Email\", \"email\", [required], Input)}\r\n      {createField(\"password\", \"password\", [required], Input, {\r\n        type: \"password\",\r\n      })}\r\n      {createField(\r\n        null,\r\n        \"rememberMe\",\r\n        [],\r\n        Input,\r\n        {\r\n          type: \"checkbox\",\r\n        },\r\n        \"remember me\"\r\n      )}\r\n      {captchaUrl && <img src={captchaUrl} alt={'капча'}/>}\r\n      {captchaUrl &&\r\n        createField(\"введите символы с картинки\", \"captcha\", [required], Input)}\r\n      {error && <div className={classes.form__summary_error}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n\r\nexport default LoginReduxForm;\r\n","import React from \"react\"; // import classes from \"./Login.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginReduxform from \"./LoginForm\";\r\nimport { loginThunk as login } from \"../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxform onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  captchaUrl: state.auth.captchaUrl,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport classes from \"./Music.module.css\";\r\nconst Music = (props) => {\r\n  return <div>Music</div>;\r\n};\r\nexport default Music;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/profile\"\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/dialogs\"\r\n          >\r\n            Messages\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/users\"\r\n          >\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/news\"\r\n          >\r\n            News\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/music\"\r\n          >\r\n            Music\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink\r\n            activeClassName={classes.active}\r\n            className={classes.item}\r\n            to=\"/settings\"\r\n          >\r\n            Settings\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport classes from \"./News.module.css\";\r\nconst News = (props) => {\r\n  return <div>News</div>;\r\n};\r\nexport default News;\r\n","export const updateObjectInArray = (\r\n  items,\r\n  itemId,\r\n  objPropName,\r\n  newObjProps\r\n) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from \"../API/api\";\r\nimport { updateObjectInArray } from \"../components/Utils/object-helpers\";\r\nconst follow = \"samurai-network/app/FOLLOW\";\r\nconst unfollow = \"samurai-network/users/UNFOLLOW\";\r\nconst setUsers = \"samurai-network/users/SET_USERS\";\r\nconst setCurrentPage = \"samurai-network/users/SET_CURRENT_PAGE\";\r\nconst setTotalUsersCount = \"samurai-network/users/SET_TOTAL_USERS_COUNT\";\r\nconst toggleIsFetching = \"samurai-network/users/TOGGLE_IS_FETCHING\";\r\nconst toggleIsFollowingProgress =\r\n  \"samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case follow:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: true,\r\n        }),\r\n      };\r\n\r\n    case unfollow:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\r\n          followed: false,\r\n        }),\r\n      };\r\n    case setUsers:\r\n      return { ...state, users: action.users };\r\n    case setCurrentPage:\r\n      return { ...state, currentPage: action.currentPage };\r\n    case setTotalUsersCount:\r\n      return { ...state, totalUsersCount: action.count };\r\n    case toggleIsFetching:\r\n      return { ...state, isFetching: action.isFetching };\r\n    case toggleIsFollowingProgress:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst followSuccess = (userId) => ({ type: follow, userId });\r\nconst unfollowSuccess = (userId) => ({ type: unfollow, userId });\r\nconst setUsersAC = (users) => ({ type: setUsers, users });\r\nexport const setCurrentPageAC = (currentPage) => ({\r\n  type: setCurrentPage,\r\n  currentPage,\r\n});\r\nconst setTotalUsersCountAC = (count) => ({\r\n  type: setTotalUsersCount,\r\n  count,\r\n});\r\nconst toggleIsFetchingAC = (isFetching) => ({\r\n  type: toggleIsFetching,\r\n  isFetching,\r\n});\r\nexport const toggleIsFollowingProgressAC = (isFetching, userId) => ({\r\n  type: toggleIsFollowingProgress,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true));\r\n    let response = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetchingAC(false));\r\n    dispatch(setUsersAC(response.items));\r\n    dispatch(setTotalUsersCountAC(response.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, apiMethod, actionCreator) => {\r\n  dispatch(toggleIsFollowingProgressAC(true, id));\r\n  let response = await apiMethod(id);\r\n  if (response.resultCode === 0) {\r\n    dispatch(actionCreator(id));\r\n  }\r\n  dispatch(toggleIsFollowingProgressAC(false, id));\r\n};\r\n\r\nexport const followThunk = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      usersAPI.follow.bind(usersAPI),\r\n      followSuccess\r\n    );\r\n  };\r\n};\r\nexport const unFollowThunk = (id) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(\r\n      dispatch,\r\n      id,\r\n      usersAPI.unFollow.bind(usersAPI),\r\n      unfollowSuccess\r\n    );\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10,\r\n}) => {\r\n  const pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  const pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const portionCount = Math.ceil(pagesCount / portionSize);\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          PREV\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              onClick={(e) => {\r\n                onPageChanged(p);\r\n              }}\r\n              className={cn(\r\n                {\r\n                  [styles.selectedPage]: currentPage === p,\r\n                },\r\n                styles.pageNumber\r\n              )}\r\n              key={p}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          NEXT\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./users.module.css\";\r\n\r\nconst User = ({ user, followingInProgress, unfollow, follow }) => {\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={\"/profile/\" + user.id}>\r\n            <img\r\n              src={\r\n                user.photos.small != null\r\n                  ? user.photos.small\r\n                  : \"https://vk.com/images/camera_400.png?ava=1\"\r\n              }\r\n              alt=\"фото пользователя\"\r\n              className={styles.user__photo}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                unfollow(user.id);\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => {\r\n                follow(user.id);\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <div>{user.name}</div>\r\n        <div>{user.status}</div>\r\n      </span>\r\n      <span>\r\n        <div>{\"Страна\"}</div>\r\n        <div>{\"Город\"}</div>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({\r\n  currentPage,\r\n  totalUsersCount,\r\n  pageSize,\r\n  onPageChanged,\r\n  users,\r\n  followingInProgress,\r\n  unfollow,\r\n  follow,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        onPageChanged={onPageChanged}\r\n        totalItemsCount={totalUsersCount}\r\n        pageSize={pageSize}\r\n      />\r\n      <div>\r\n        {users.map((u) => (\r\n          <User\r\n            user={u}\r\n            followingInProgress={followingInProgress}\r\n            unfollow={unfollow}\r\n            follow={follow}\r\n            key={u.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","export const getAllUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n};\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  followThunk as follow,\r\n  setCurrentPageAC as setCurrentPage,\r\n  unFollowThunk as unfollow,\r\n  toggleIsFollowingProgressAC as toggleFollowInProgress,\r\n  getUsers,\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/preloader\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getPageSize,\r\n  getAllUsers,\r\n  getTotalUsersCount,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getCurrentPage,\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props;\r\n    this.props.getUsers(currentPage, pageSize);\r\n  }\r\n  onPageChanged = (pageNumber) => {\r\n    const { pageSize } = this.props;\r\n\r\n    this.props.getUsers(pageNumber, pageSize);\r\n    this.props.setCurrentPage(pageNumber);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          onPageChanged={this.onPageChanged}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n          toggleFollowInProgress={this.props.toggleFollowInProgress}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getAllUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowInProgress,\r\n    getUsers,\r\n  })\r\n)(UsersContainer);\r\n","import { setUsersThunk as getAuthUserData } from \"./authReducer\";\r\n\r\nconst setInitialized = \"samurai-network/app/SET_INITIALIZED\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n  globalError: null,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case setInitialized:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({\r\n  type: setInitialized,\r\n});\r\n\r\nexport const initializeAppThunk = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n      dispatch(initializedSuccess());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {\r\n  friends: [\r\n    {\r\n      id: 4,\r\n      name: \"Lena\",\r\n      img: \"https://99px.ru/sstorage/1/2009/06/1010609174346.gif\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Andrew\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1200509145156.gif\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Mike\",\r\n      img: \"https://99px.ru/sstorage/1/2009/05/1160509141516.jpg\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\nexport default friendsReducer;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport friendsReducer from \"./friendsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  friendsList: friendsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { connect, Provider } from \"react-redux\";\nimport {\n  HashRouter,\n  Redirect,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport \"./App.css\";\nimport Preloader from \"./components/Common/Preloader/preloader\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport { WithSuspense } from \"./components/HOC/withSuspense\";\nimport LoginPage from \"./components/Login/Login\";\nimport Music from \"./components/Music/Music\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\n// import Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport { initializeAppThunk as initializeApp } from \"./redux/appReducer\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() =>\n  import(\"./components/Dialogs/DialogsContainer\")\n);\nconst ProfileContainer = React.lazy(() =>\n  import(\"./components/Profile/ProfileContainer\")\n);\n\nclass App extends Component {\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\n    alert(\"some error\");\n    console.error(promiseRejectionEvent);\n  };\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\ncomponentWillUnmount(){\n  window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n\n}\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        {/* <FriendList /> */}\n        <div className=\"app-wrapper__content\">\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/profile\" />\n\n            <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)} />\n            <Route\n              path=\"/profile/:userId?\"\n              render={WithSuspense(ProfileContainer)}\n            />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n            <Route path=\"/login\" render={() => <LoginPage />} />\n\n            <Route path=\"/news\" component={News} />\n            <Route path=\"/music\" component={Music} />\n            <Route path=\"/*\" render={() => <div>PAGE NOT FOUND</div>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized,\n});\nconst AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJSApp = (props) => {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  );\n};\nexport default SamuraiJSApp;\n","import * as serviceWorker from \"./serviceWorker\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default __webpack_public_path__ + \"static/media/preloader.c2f67646.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} alt={'прелоадер'}/>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__control\":\"FormsControl_form__control__2WcUZ\",\"error\":\"FormsControl_error__2DMvp\",\"form__summary_error\":\"FormsControl_form__summary_error__1r_HO\"};","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return \"max length is 30\";\r\n  return undefined;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__AiFft\",\"img\":\"Header_img__3hSUL\",\"login__block\":\"Header_login__block__aHZwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2LXvF\",\"pageNumber\":\"Paginator_pageNumber__1IIMP\",\"selectedPage\":\"Paginator_selectedPage__3y9iD\"};","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../API/api\";\r\n\r\nconst addPost = \"samurai-network/profile/ADD-POST\";\r\nconst setUserProfile = \"samurai-network/profile/SET-USER-PROFILE\";\r\nconst setStatus = \"samurai-network/profile/SET-STATUS\";\r\nconst savePhotoSucces = \"samurai-network/profile/SAVE-PHOTO-SUCCES\";\r\n\r\nlet initialState = {\r\n  postsData: [\r\n    { id: 1, message: \"Hi! How r u?\", likeCount: 15 },\r\n    { id: 2, message: \"Hi! It's my first post\", likeCount: 20 },\r\n  ],\r\n  newPostText: \"it-cam\",\r\n  profile: null,\r\n  status: \"----\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case addPost:\r\n      let newPost = {\r\n        id: 5,\r\n        message: action.newPostBody,\r\n        likeCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        postsData: [...state.postsData, newPost],\r\n        newPostText: \"\",\r\n      };\r\n\r\n    case setUserProfile:\r\n      return { ...state, profile: action.profile };\r\n    case setStatus:\r\n      return { ...state, status: action.status };\r\n    case savePhotoSucces:\r\n      return { ...state, profile: { ...state.profile, photos: action.photos } };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostBody) => ({\r\n  type: addPost,\r\n  newPostBody,\r\n});\r\nexport const setUserProfileAC = (profile) => ({\r\n  type: setUserProfile,\r\n  profile,\r\n});\r\nexport const setStatusAC = (status) => ({\r\n  type: setStatus,\r\n  status,\r\n});\r\nexport const savePhotoAC = (photos) => ({\r\n  type: savePhotoSucces,\r\n  photos,\r\n});\r\n\r\nexport const setUserThunk = (id) => {\r\n  return async (dispatch) => {\r\n    let response = await profileAPI.setUserProfile(id);\r\n    dispatch(setUserProfileAC(response));\r\n  };\r\n};\r\nexport const getStatusThunk = (id) => {\r\n  return async (dispatch) => {\r\n    let response = await profileAPI.getStatus(id);\r\n    dispatch(setStatusAC(response));\r\n  };\r\n};\r\n\r\nexport const updateStatusThunk = (status) => {\r\n  return async (dispatch) => {\r\n    try{\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.resultCode === 0) {\r\n      dispatch(setStatusAC(status));\r\n    }\r\n  } catch(error){\r\n    alert('Error')\r\n  }\r\n}\r\n};\r\nexport const savePhotoThunk = (file) => {\r\n  return async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.resultCode === 0) {\r\n      dispatch(savePhotoAC(response.data.photos));\r\n    }\r\n  };\r\n};\r\nexport const saveProfileThunk = (profile) => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.resultCode === 0) {\r\n      dispatch(setUserThunk(userId));\r\n    } else {\r\n      let message =\r\n        response.messages.length > 0 ? response.messages[0] : \"Some Error\";\r\n      dispatch(stopSubmit(\"edit-profile\", { _error: message }));\r\n      return Promise.reject(message)\r\n    }\r\n  };\r\n};\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}
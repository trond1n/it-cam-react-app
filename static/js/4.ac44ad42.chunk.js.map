{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","Post","className","classes","item","img","src","alt","message","likeCount","MyPosts","postsElements","posts","map","post","post__block","e","addPost","newPostBody","MyPostsContaiter","connect","state","profilePage","postsData","newPostText","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","description__block","photos","large","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","setUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.ac44ad42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__block\":\"MyPosts_post__block__QaKiA\",\"posts\":\"MyPosts_posts__1kcwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1og0k\",\"img\":\"Post_img__3NzxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description__block\":\"ProfileInfo_description__block__11CqL\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../Utils/Validators/validator\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newPostBody\"}\r\n          placeholder=\"Что сегодня произошло?\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Добавить пост</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddPostForm);\r\n\r\nexport default AddPostReduxForm;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        className={classes.img}\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRbJjaUVrc9az_B1Rqphs0EULawVrCg_mBMIg&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>likes: {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport AddPostReduxForm from \"./AddPostForm\";\r\n\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((post) => (\r\n    <Post message={post.message} likeCount={post.likeCount} />\r\n  ));\r\n\r\n  let onAddPost = (e) => {\r\n    props.addPost(e.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.post__block}>\r\n      <h3>My Posts</h3>\r\n      <AddPostReduxForm onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContaiter = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContaiter;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n// import Preloader from \"../../Common/Preloader/preloader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateMode}>{status || \"-------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../../Common/Preloader/preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className={classes.description__block}>\r\n          <img\r\n            src={\r\n              profile.photos.large != null\r\n                ? profile.photos.large\r\n                : \"https://vk.com/images/camera_400.png?ava=1\"\r\n            }\r\n            alt=\"ава пользователя\"\r\n          />\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = (props) => {\r\n  return (\r\n    <main>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setUserThunk as setUserProfile,\r\n  getStatusThunk as getStatus,\r\n  updateStatusThunk as updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n// import { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.setUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { setUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}
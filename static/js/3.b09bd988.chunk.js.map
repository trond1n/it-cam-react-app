{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/HOC/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","activeClassName","classes","active","className","dialog","to","img","src","alt","name","Message","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","Dialogs","dialogsPage","dialogsElements","dialogsData","map","messagesElements","messagesData","dialogs","dialogs__items","messages","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,2BAA2B,IAAM,0B,oBCAhGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAvND,EAAOC,QAAU,CAAC,QAAU,2B,0ICExBC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,0BCiBNE,EAjBI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,8BAEE,eAAC,IAAD,CACEC,gBAAiBC,IAAQC,OACzBC,UAAWF,IAAQG,OACnBC,GAAIP,EAHN,UAKE,qBAAKK,UAAWF,IAAQK,IAAKC,IAAKV,EAAMS,IAAKE,IAAI,gBAChDX,EAAMY,W,oCCPAC,EAJC,SAACb,GACf,OAAO,qBAAKM,UAAWF,IAAQU,QAAxB,SAAkCd,EAAMc,W,iCCA3CC,EAAeC,YAAiB,KAwBvBC,EAJaC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAAClB,GACtB,OACE,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUT,GACrBU,UAAWC,IACXd,KAAM,iBACNe,YAAY,yGAGhB,8BACE,kDCkBOC,EA9BC,SAAC5B,GACf,IAAIJ,EAAQI,EAAM6B,YAEdC,EAAkBlC,EAAMmC,YAAYC,KAAI,SAACzB,GAAD,OAC1C,cAAC,EAAD,CACEE,IAAKF,EAAOE,IACZG,KAAML,EAAOK,KAEbV,GAAIK,EAAOL,IADNK,EAAOL,OAIZ+B,EAAmBrC,EAAMsC,aAAaF,KAAI,SAAClB,GAAD,OAC5C,cAAC,EAAD,CAASA,QAASA,EAAQA,QAASZ,GAAIY,EAAQZ,IAASY,EAAQZ,OAOlE,OAAKF,EAAMH,OAET,sBAAKS,UAAWF,IAAQ+B,QAAxB,UACE,qBAAK7B,UAAWF,IAAQgC,eAAxB,SAAyCN,IACzC,qBAAKxB,UAAWF,IAAQiC,SAAxB,SACE,8BAAMJ,MAER,cAAC,EAAD,CAAgBb,SAXA,SAACkB,GACnBtC,EAAMuC,YAAYD,EAAOE,sBAGD,cAAC,IAAD,CAAUhC,GAAI,YCP3BiC,sBACbC,aAdoB,SAAC9C,GACrB,MAAO,CACLiC,YAAajC,EAAMiC,gBAGE,SAACc,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,ULPF,SAACK,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK/C,MAAMH,OAET,cAACgD,EAAD,eAAeE,KAAK/C,QAFI,cAAC,IAAD,CAAUQ,GAAI,eAHJ,GACbwC,IAAMH,WAWtC,OAHqCH,YAAQ/C,EAAR+C,CACnCI,KKEWL,CAGbb","file":"static/js/3.b09bd988.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__sQWmZ\",\"active\":\"DialogItem_active___0Pcf\",\"img\":\"DialogItem_img__2NInp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2PBML\",\"dialogs__items\":\"Dialogs_dialogs__items__3UY9k\",\"dialog\":\"Dialogs_dialog__3MrBX\",\"active\":\"Dialogs_active__8ePFe\",\"messages\":\"Dialogs_messages__CmwpD\",\"message\":\"Dialogs_message__re4Sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1BQ5t\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div>\r\n      \r\n      <NavLink\r\n        activeClassName={classes.active}\r\n        className={classes.dialog}\r\n        to={path}\r\n      >\r\n        <img className={classes.img} src={props.img} alt=\"user avatar\" />\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={classes.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../Utils/Validators/validator\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          validate={[required, maxLength100]}\r\n          component={Textarea}\r\n          name={\"newMessageBody\"}\r\n          placeholder=\"Введите сообщение \"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default AddMessageReduxForm;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogsData.map((dialog) => (\r\n    <DialogItem\r\n      img={dialog.img}\r\n      name={dialog.name}\r\n      key={dialog.id}\r\n      id={dialog.id}\r\n    />\r\n  ));\r\n  let messagesElements = state.messagesData.map((message) => (\r\n    <Message message={message.message} id={message.id} key={message.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogs__items}>{dialogsElements}</div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { sendMessageCreator } from \"../../redux/dialogsReducer\";\r\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}
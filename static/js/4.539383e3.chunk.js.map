{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","Post","className","classes","item","img","src","alt","message","likeCount","MyPosts","postsElements","posts","map","post","id","post__block","e","addPost","newPostBody","MyPostsContaiter","connect","state","profilePage","postsData","newPostText","dispatch","addPostActionCreator","ProfileDataReduxForm","initialValues","error","form__summary_error","onClick","createField","Input","type","Object","keys","contacts","key","styles","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileData","profile","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","description__block","main__photo","photos","large","target","files","length","formData","then","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","setUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.539383e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description__block\":\"ProfileInfo_description__block__11CqL\",\"main__photo\":\"ProfileInfo_main__photo__1CR9h\",\"contacts\":\"ProfileInfo_contacts__9szh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post__block\":\"MyPosts_post__block__QaKiA\",\"posts\":\"MyPosts_posts__1kcwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1og0k\",\"img\":\"Post_img__3NzxZ\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../Utils/Validators/validator\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newPostBody\"}\r\n          placeholder=\"Что сегодня произошло?\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Добавить пост</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddPostForm);\r\n\r\nexport default AddPostReduxForm;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        className={classes.img}\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRbJjaUVrc9az_B1Rqphs0EULawVrCg_mBMIg&usqp=CAU\"\r\n        alt=\"\"\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>likes: {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from \"react\";\r\nimport AddPostReduxForm from \"./AddPostForm\";\r\n\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n  const postsElements = props.posts.map((post) => (\r\n    <Post key={post.id} message={post.message} likeCount={post.likeCount} />\r\n  ));\r\n\r\n  const onAddPost = (e) => {\r\n    props.addPost(e.newPostBody);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.post__block}>\r\n      <h3>My Posts</h3>\r\n      <AddPostReduxForm onSubmit={onAddPost} />\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.postsData,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {\r\n      dispatch(addPostActionCreator(newPostBody));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContaiter = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContaiter;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"../../Common/FormsControls/FormsControls\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport classes from \"../../Common/FormsControls/FormsControl.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, initialValues, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div className={classes.form__summary_error}>{error}</div>}\r\n      <div>\r\n        <button onClick={() => {}}>Save</button>\r\n      </div>\r\n\r\n      <div>\r\n        <b>Full Name: </b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Loking for a job: </b>{\" \"}\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        <b>My Professional Skills: </b>{\" \"}\r\n        {createField(\r\n          \"my professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        <b>About me: </b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts: </b>{\" \"}\r\n        {Object.keys(initialValues.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={styles.contacts}>\r\n              <b>\r\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\nexport default ProfileDataReduxForm;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n// import Preloader from \"../../Common/Preloader/preloader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <b>Status: </b>\r\n          <span onDoubleClick={activateMode}>{status || \"-------\"}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={deactivateMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, { useState } from \"react\";\r\nimport Preloader from \"../../Common/Preloader/preloader\";\r\nimport ProfileDataReduxForm from \"./ProfileDataForm\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className={classes.description__block}>\r\n          <img\r\n            className={classes.main__photo}\r\n            src={\r\n              profile.photos.large != null\r\n                ? profile.photos.large\r\n                : \"https://vk.com/images/camera_400.png?ava=1\"\r\n            }\r\n            alt=\"ава пользователя\"\r\n          />\r\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n          {editMode ? (\r\n            <ProfileDataReduxForm initialValues={profile} onSubmit={onSubmit} />\r\n          ) : (\r\n            <ProfileData\r\n              goToEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full Name: </b> {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Loking for a job: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My Professional Skills: </b> {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me: </b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts: </b>{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={classes.contacts}>\r\n      <b>{contactTitle}: </b> {contactValue}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = (props) => {\r\n  return (\r\n    <main>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setUserThunk as setUserProfile,\r\n  getStatusThunk as getStatus,\r\n  updateStatusThunk as updateStatus,\r\n  savePhotoThunk as savePhoto,\r\n  saveProfileThunk as saveProfile,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n// import { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.setUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        isOwner={!this.props.match.params.userId}\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}